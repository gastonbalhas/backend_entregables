<!DOCTYPE html>
<html>
<head>
  <title>Lista de Productos en Tiempo Real</title>
</head>
<body>
  <h1>Lista de Productos en Tiempo Real</h1>
  <ul id="real-time-list">
    {{#each products}}
      <li>
        <strong>Nombre:</strong> {{this.title}}, 
        <strong>Descripción:</strong> {{this.description}}, 
        <strong>Precio:</strong> {{this.price}}
        <button class="deleteBtn" data-id="{{this.id}}">Eliminar</button>
      </li>
    {{/each}}
  </ul>

  <form id="productForm">
    <label for="productName">Nombre:</label>
    <input type="text" id="productName" name="productName"><br>

    <label for="productDescription">Descripción:</label>
    <input type="text" id="productDescription" name="productDescription"><br>

    <label for="productPrice">Precio:</label>
    <input type="text" id="productPrice" name="productPrice"><br>
    
    <button type="submit">Agregar Producto</button>
  </form>

  <form id="deleteProductForm">
    <label for="productId">ID del producto:</label>
    <input type="text" id="productId" name="productId"><br>

    <button type="submit">Eliminar Producto</button>
  </form>

  <script src="http://localhost:8080/socket.io/socket.io.js"></script>
  <script>
    const socket = io(); 

    socket.on('updateProducts', (updatedData) => {
      if (updatedData.deletedProductId) {
        const productToDelete = document.querySelector(`[data-id="${updatedData.deletedProductId}"]`);
        if (productToDelete) {
          productToDelete.parentElement.remove();
        }
      } else {
        const list = document.getElementById('real-time-list');
        const listItem = document.createElement('li');
        listItem.innerHTML = `Nombre: ${updatedData.title}, Descripción: ${updatedData.description}, Precio: ${updatedData.price}`;
        list.appendChild(listItem);
      }
    });

    const productForm = document.getElementById('productForm');
    productForm.addEventListener('submit', (event) => {
      event.preventDefault();
      const productName = document.getElementById('productName').value;
      const productDescription = document.getElementById('productDescription').value;
      const productPrice = document.getElementById('productPrice').value;


      socket.emit('addProduct', { title: productName, description: productDescription, price: productPrice });
      productForm.reset();
    });

    const deleteProductForm = document.getElementById('deleteProductForm');
    deleteProductForm.addEventListener('submit', (event) => {
      event.preventDefault();
      const productId = document.getElementById('productId').value;


      socket.emit('deleteProduct', productId);
      deleteProductForm.reset();
    });
  </script>
</body>
</html>
